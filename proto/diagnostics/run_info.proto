/*

   calin/proto/diagnostics/run_info.proto -- Stephen Fegan -- 2018-10-26

   Protobufs for run informaton diagnostics

   Copyright 2018, Stephen Fegan <sfegan@llr.in2p3.fr>
   LLR, Ecole Polytechnique, CNRS/IN2P3

   This file is part of "calin"

   "calin" is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License version 2 or
   later, as published by the Free Software Foundation.

   "calin" is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

*/

syntax = "proto3";
option cc_enable_arenas = true;

import "calin.proto";
import "math/histogram.proto";
import "diagnostics/range.proto";
//import "common_types.proto";

package calin.ix.diagnostics.run_info;

message RunInfo {
  option (CMO).message_integration_function = MIF_AUTOMATIC;

  uint64 num_events_found                                  = 1 [
    (CFO).desc = "Number of events found.",
    (CFO).is_counter = true ];
  calin.ix.diagnostics.range.IndexRange event_numbers_found = 2 [
    (CFO).desc = "Range of event numbers found." ];
  calin.ix.math.histogram.Histogram1DData event_number_histogram = 3 [
    (CFO).desc = "Histogram of event numbers found." ];

  calin.ix.math.histogram.Histogram1DData elapsed_time_histogram = 10 [
    (CFO).desc = "Histogram of elapsed time." ];

  uint64 num_events_missing_cdts                           = 20 [
    (CFO).desc = "Number of events without CDTS information.",
    (CFO).is_counter = true ];
  uint64 num_events_missing_tib                            = 21 [
    (CFO).desc = "Number of events without TIB information.",
    (CFO).is_counter = true ];
  uint64 num_events_missing_swat                           = 22 [
    (CFO).desc = "Number of events without SWAT information.",
    (CFO).is_counter = true ];
  uint64 num_events_incomplete                             = 23 [
    (CFO).desc = "Number of events without all channel information.",
    (CFO).is_counter = true ];
  uint64 num_duplicate_event_numbers                       = 24 [
    (CFO).desc = "Number of duplicated event numbers found.",
    (CFO).is_counter = true ];

  calin.ix.diagnostics.range.IndexRange events_missing_cdts = 30 [
    (CFO).desc = "List of event ranges without UCTS information." ];
  calin.ix.diagnostics.range.IndexRange events_missing_tib = 31 [
    (CFO).desc = "List of event ranges without TIB information." ];
  calin.ix.diagnostics.range.IndexRange events_missing_swat = 32 [
    (CFO).desc = "List of event ranges without SWAT information." ];
  calin.ix.diagnostics.range.IndexRange events_incomplete  = 33 [
    (CFO).desc = "List of event ranges without without all channel information." ];
  calin.ix.diagnostics.range.RunLengthEncodingUInt64 duplicate_event_numbers = 34 [
    (CFO).desc = "List of duplicate event numbers (value) and the number "
      "of EXTRA times they appear (count)." ];
};

message PartialRunInfo {
  option (CMO).message_integration_function = MIF_AUTOMATIC;

  repeated uint64 event_number_sequence                    = 1 [
    (CFO).integration_algorithm = APPEND ];
  calin.ix.diagnostics.range.RunLengthEncodingBool cdts_presence = 2;
  calin.ix.diagnostics.range.RunLengthEncodingBool tib_presence = 3;
  calin.ix.diagnostics.range.RunLengthEncodingBool swat_presence = 4;
  calin.ix.diagnostics.range.RunLengthEncodingBool all_channels_presence = 5;
}
