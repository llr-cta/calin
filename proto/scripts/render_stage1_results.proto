/*

   calin/proto/scripts/render_stage1_results.proto -- Stephen Fegan -- 2021-07-05

   Protobufs for command line options for render_stage1_results.py

   Copyright 2021, Stephen Fegan <sfegan@llr.in2p3.fr>
   Laboratoire Leprince-Ringuet, CNRS/IN2P3, Ecole Polytechnique, Institut Polytechnique de Paris

   This file is part of "calin"

   "calin" is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License version 2 or
   later, as published by the Free Software Foundation.

   "calin" is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

*/

syntax = "proto3";

import "calin.proto";
// import "diagnostics/stage1.proto";

package calin.ix.scripts.render_stage1_results;

message GoogleDriveOptions {
  string credentials_file                                  = 1;
  string token_file                                        = 2;
};

message CommandLineOptions {
  string db                                                = 1 [
    (CFO).desc = "SQLite3 output file name." ];
  string db_stage1_table_name                              = 2 [
    (CFO).desc = "Table name of results structure in database." ];

  bool upload_to_google_drive                              = 3 [
    (CFO).desc = "Write plots to Google Drive, othewise to the filesystem." ];

  GoogleDriveOptions google                                = 4;

  string base_directory                                    = 5;
  string summary_sheet                                     = 6;
  string run_log_sheet                                     = 7;

  int32 run_number                                         = 8 [
    (CFO).desc = "Draw plots only for one run with given number."];
  int32 from_run_number                                    = 9 [
    (CFO).desc = "Draw plots for all runs from given number."];
  int32 to_run_number                                      = 10 [
    (CFO).desc = "Draw plots for all runs to given number."];

  bool skip_existing                                       = 11 [
    (CFO).desc = "Skip runs (files) for which there is already an entry in the "
      "summary sheet (if it is configured). Runs are matched based on the last three "
      "components of their path name, e.g. \"2021/20210901/NectarCAM.Run2571.0000.fits.fz\"."];

  bool loud_upload                                         = 12 [
    (CFO).desc = "Print name of all plots being uploaded."];
  bool overwrite                                           = 13 [
    (CFO).desc = "Overwite plots that already exist."];

  uint32 nthread                                           = 14 [
    (CFO).desc = "Set number of threads to use to process runs."];

  uint32 figure_dpi                                        = 30[
    (CFO).desc = "Set DPI for plots."];

  bool draw_psd                                            = 40 [
    (CFO).desc = "Enable drawing of PSD plot."];
  bool draw_high_low                                       = 41 [
    (CFO).desc = "Enable drawing of high-low gain plots."];
  bool draw_charge                                         = 42 [
    (CFO).desc = "Enable drawing of charge histograms and related plots."];
  bool draw_missing_components                             = 43 [
    (CFO).desc = "Enable drawing of missing-component plot."];
  bool draw_pedestal                                       = 44 [
    (CFO).desc = "Enable drawing of pedestal plots."];
  bool draw_temperature                                    = 45 [
    (CFO).desc = "Enable drawing of temperature plots."];
  bool draw_clock                                          = 46 [
    (CFO).desc = "Enable drawing of clock regression plots."];
  bool draw_data_ordering                                  = 47 [
    (CFO).desc = "Enable drawing of channel and module data ordering plots."];
  bool draw_hvpa                                           = 48 [
    (CFO).desc = "Enable drawing of HVPA voltage and current plots."];
  bool draw_trigger                                        = 49 [
    (CFO).desc = "Enable drawing of trigger plots."];
  bool draw_waveform_mean                                  = 50 [
    (CFO).desc = "Enable drawing of mean waveform plots."];
  bool draw_event                                          = 51 [
    (CFO).desc = "Enable drawing of event rate and delta-t plots."];
  bool draw_provenance                                     = 52 [
    (CFO).desc = "Enable upload of provenance summary."];

  bool force_nectarcam_61_camera                           = 100;
};
