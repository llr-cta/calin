/*

   calin/proto/simulations/corsika8_shower_generator.proto -- Stephen Fegan -- 2024-08-23

   Protobufs for configuration of CORSIKA8 shower generator

   Copyright 2024, Stephen Fegan <sfegan@llr.in2p3.fr>
   Laboratoire Leprince-Ringuet, CNRS/IN2P3, Ecole Polytechnique, Institut Polytechnique de Paris

   This file is part of "calin"

   "calin" is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License version 2 or
   later, as published by the Free Software Foundation.

   "calin" is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

*/

syntax = "proto3";

import "calin.proto";
import "common_types.proto";

package calin.ix.simulation.corsika8_shower_generator;

enum VerbosityLevel {
  C8_WARNING         = 0;
  C8_INFORMATION     = 1;
  C8_DEBUG           = 2;
};

enum AtmosphereicModel {
  LinsleyUSStd       = 0;
  MiddleEuropeJan    = 1;
  MiddleEuropeFeb    = 2;
  MiddleEuropeMay    = 3;
  MiddleEuropeJun    = 4;
  MiddleEuropeAug    = 5;
  MiddleEuropeOct    = 6;
  MiddleEuropeDec    = 7;
  SouthPoleMar       = 8;
  SouthPoleJul       = 9;
  SouthPoleOct       = 10;
  SouthPoleDec       = 11;
  SouthPoleJan       = 12;
  SouthPoleAug       = 13;
  MalargueWinterI    = 14;
  MalargueWinterII   = 15;
  MalargueSpring     = 16;
  MalargueSummer     = 17;
  MalargueAutumn     = 18;
  USStdBK            = 19;
  CUSTOM             = 100;
};

enum HEHadronicModel {
  SIBYLL_2_3d        = 0;
  QGSJet_II_04       = 1;
  EPOS_LHC           = 2;
};

message ExponentialAtmosphereLayer {
  double top_of_layer                                      = 1
    [(CFO).desc = "Altitude of the top of the layer above the surface of "
      "the Earth.", (CFO).units="cm"];
  double thickness                                         = 2
  [(CFO).desc = "Total thickness of the atmosphere from the top of the "
    "atnosphere (usually 112.8km) to the bottom of this layer.", 
    (CFO).units="g/cm^2"];
  double scale_height                                      = 3
  [(CFO).desc = "Vertical distance over which density falls to 1/e in "
    "the atmosphere.", (CFO).units="cm"];
}

message CORSIKA8ShowerGeneratorConfiguration
{
  AtmosphereicModel atmospheric_model                      = 1
    [(CFO).desc = "Standard atmosphere name."];
  repeated ExponentialAtmosphereLayer custom_atmosphere    = 2
    [(CFO).desc = "Parameters of custom atmospheric mode if selected."];

  double atmospheric_fraction_n2                           = 3
    [(CFO).desc = "Atmospheric fraction of molecular Nitrogen."];
  double atmospheric_fraction_o2                           = 4
    [(CFO).desc = "Atmospheric fraction of molecular Oxygen."];
  double atmospheric_fraction_ar                           = 5
    [(CFO).desc = "Atmospheric fraction of Argon."];
  double atmospheric_fraction_co2                          = 6
    [(CFO).desc = "Atmospheric fraction of Carbon dioxide."];
  double atmospheric_fraction_h2o                          = 7
    [(CFO).desc = "Atmospheric fraction of Water."];

  uint32 num_atm_layers                                    = 8
    [(CFO).desc = "Number of atmospheric layers. This applies only when the "
      "CORSIKA 8 atmosphere is built from an external atmosphere class." ];

  double earth_radius                                      = 10
    [(CFO).desc = "Radius of the Earth.", (CFO).units = "cm" ];
  double zground                                           = 11
    [(CFO).desc = "Altitude of ground level.", (CFO).units = "cm" ];
  double ztop                                              = 12
    [(CFO).desc = "Altitude of top of atmophere.", (CFO).units = "cm" ];  
  calin.ix.common_types.Vector3D uniform_magnetic_field    = 13
    [(CFO).desc = "Uniform magnetic field to apply in standard coordinate "
      "system (+z up, +x east, +y north).", (CFO).units = "nT" ];

  uint32 seed                                              = 20
    [(CFO).desc = "CORSIKA8 random number seed. If zero the seed "
      "will be generated by the hardware random number generator." ];
  VerbosityLevel verbosity                                 = 21
    [(CFO).desc = "Verbosity of shower generator" ];

  double electrion_photon_cut                              = 30
    [(CFO).desc = "Minimum kinetic energy of photons, electrons and "
      "positrons in tracking.", (CFO).units = "MeV" ];
  double hadronic_cut                                      = 31
    [(CFO).desc = "Minimum kinetic energy of hadrons "
      "in tracking.", (CFO).units = "MeV" ];
  double muon_cut                                          = 32
    [(CFO).desc = "Minimum kinetic energy of muons "
      "in tracking.", (CFO).units = "MeV" ];
  HEHadronicModel he_hadronic_model                        = 33
    [ (CFO).desc = "High-energy hadronic interaction model." ];
  double he_hadronic_transition_energy                     = 34
     [ (CFO).desc = "Transition between high-/low-energy hadronic interaction "
        "model in GeV", (CFO).units = "MeV" ];
};
