//-*-mode:protobuf; mode:font-lock;-*-

/*

   calin/proto/simulations/sct_optics.proto -- Stephen Fegan -- 2021-04-23

   Protobufs for defining SCT optics arrays

   Copyright 2021, Stephen Fegan <sfegan@llr.in2p3.fr>
   Laboratoire Leprince-Ringuet, CNRS/IN2P3, Ecole Polytechnique, Institut Polytechnique de Paris

   This file is part of "calin"

   "calin" is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License version 2 or
   later, as published by the Free Software Foundation.

   "calin" is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

*/

syntax = "proto3";

import "calin.proto";
import "common_types.proto";
import "simulation/vs_optics.proto";

package calin.ix.simulation.sct_optics;

// ============================================================================
//
// PARAMETERS THAT DEFINE CONCRETE ARRAY
//
// ============================================================================

message SCTFacetScheme
{
  double inner_ring_inner_radius                           = 1 [
    (CFO).desc = "Inner radius of inner ring or mirrors (distance between"
      "origin and line defining inner edge of facet).", (CFO).units="cm" ];
  double inner_ring_outer_radius                           = 2 [
    (CFO).desc = "Outer radius of inner ring or mirrors (distance between"
      "origin and line defining outer edge of facet).", (CFO).units="cm" ];
  double outer_ring_inner_radius                           = 3 [
    (CFO).desc = "Inner radius of outer ring or mirrors (distance between"
      "origin and line defining inner edge of facet).", (CFO).units="cm" ];
  double outer_ring_outer_radius                           = 4 [
    (CFO).desc = "Outer radius of outer ring or mirrors (distance between"
      "origin and line defining outer edge of facet).", (CFO).units="cm" ];
  double long_edge_half_gap                                = 5 [
    (CFO).desc = "Half the distance facets along their long edge.",
    (CFO).units="cm" ];
};

message SCTFacet
{
  uint32 id                                                = 1
    [(CFO).desc = "Sequential facet identification number, starting at zero."];
  bool removed                                             = 2
    [(CFO).desc = "True if this mirror facet has been removed."];
  double spot_size                                         = 3 [
    (CFO).desc = "Parameter describing spot size from this mirror in "
      "perfectly aligned system.", (CFO).units="cm" ];
  calin.ix.common_types.Matrix3D offset                    = 4 [
    (CFO).desc = "Facet offset, if needed.", (CFO).units="cm" ];
  calin.ix.common_types.Matrix3D rotation                  = 5 [
    (CFO).desc = "Facet rotation matrix, if needed." ];
};

message SCTTelescope
{
  repeated double primary_surface_polynomial               = 10 [
    (CFO).desc = "Coefficients describing primary surface sag. Coefficients "
      "are function of squared-distance from optic axis in cm.",
    (CFO).units = "cm" ];
  calin.ix.common_types.Vector3D primary_offset            = 11 [
    (CFO).desc = "Primary origin in reflector frame, if needed.", (CFO).units="cm" ];
  calin.ix.common_types.Matrix3D primary_rotation          = 12 [
    (CFO).desc = "Primary rotation matrix, if needed." ];
  SCTFacetScheme primary_facet_scheme                      = 13 [
    (CFO).desc = "Primary facet scheme." ];
  repeated SCTFacet primary_facets                         = 14 [
    (CFO).desc = "Primary facet parameters." ];
};

message SCTArray
{
  common_types.EarthCoordinates array_origin               = 1
    [(CFO).desc = "Coordinates of origin of array reference frame on Earth." ];
  repeated SCTTelescope telescope                          = 2
    [(CFO).desc = "Telescopes"];
};

// ============================================================================
//
// PARAMETERS USED TO CONSTRUCT RANDOM ARRAY
//
// ============================================================================

message SCTRandomArrayParameters
{
  common_types.EarthCoordinates array_origin               = 1
    [(CFO).desc = "Coordinates of origin of array reference frame on Earth"];
  calin.ix.simulation.vs_optics.UserDefinedArrayLayout array_layout = 2;

  double focal_length                                      = 3 [
    (CFO).desc = "Effective focal length of system.", (CFO).units = "cm" ];

  repeated double primary_sag_polynomial                   = 10 [
    (CFO).desc = "Coefficients describing primary surface sag. Coefficients "
      "are function of squared-distance from optic axis in units of focal length.",
    (CFO).units = "focal-length", (CFO).ref="SCT-OPTMO/121108" ];
  calin.ix.common_types.Vector3D primary_offset            = 11 [
    (CFO).desc = "Primary origin in reflector frame, if needed.", (CFO).units="cm" ];
  calin.ix.common_types.EulerAngles3D primary_rotation     = 12 [
    (CFO).desc = "Primary rotation angles, if needed." ];
  SCTFacetScheme primary_facet_scheme                      = 13 [
    (CFO).desc = "Primary facet scheme." ];

  double secondary_distance                                = 20 [
    (CFO).desc = "Position of secondary surface along optical axis at zero sag. "
      "This should be 1/q in the nomenclature of SCT-OPTMO/121108.",
    (CFO).units = "focal-length", (CFO).ref="SCT-OPTMO/121108" ];
  repeated double secondary_sag_polynomial                 = 21 [
    (CFO).desc = "Coefficients describing secondary surface sag. Coefficients "
      "are function of squared-distance from optic axis in units of focal length.",
    (CFO).units = "focal-length", (CFO).ref="SCT-OPTMO/121108" ];
  calin.ix.common_types.Vector3D secondary_offset          = 22 [
    (CFO).desc = "Secondary offset in reflector frame, if needed.", (CFO).units="cm" ];
  calin.ix.common_types.EulerAngles3D secondary_rotation   = 23 [
    (CFO).desc = "Secondary rotation angles, if needed." ];
  SCTFacetScheme secondary_facet_scheme                    = 24 [
    (CFO).desc = "Secondary facet scheme." ];

  double camera_distance                                   = 30 [
    (CFO).desc = "Position of camera surface along optical axis at zero sag. "
      "This should be 1/q-(1-alpha) in the nomenclature of SCT-OPTMO/121108.",
    (CFO).units = "focal-length", (CFO).ref="SCT-OPTMO/121108" ];
  repeated double camera_sag_polynomial                    = 31 [
    (CFO).desc = "Coefficients describing camera surface sag. Coefficients "
      "are function of squared-distance from optic axis in units of cm.",
    (CFO).units = "focal-length", (CFO).ref="SCT-OPTMO/121108" ];
  calin.ix.common_types.Vector3D camera_offset             = 32 [
    (CFO).desc = "Camera offset in reflector frame, if needed.", (CFO).units="cm" ];
  calin.ix.common_types.EulerAngles3D camera_rotation      = 33 [
    (CFO).desc = "Camera rotation angles, if needed." ];

  repeated calin.ix.simulation.vs_optics.VSOObscurationData primary_obscuration   = 40 [
    (CFO).desc = "Obscurations between photon emission and reflection at the "
      "primary mirror surface." ];
  repeated calin.ix.simulation.vs_optics.VSOObscurationData secondary_obscuration = 41 [
    (CFO).desc = "Obscurations between reflections at the primary and secondary "
      "mirror surfaces." ];
  repeated calin.ix.simulation.vs_optics.VSOObscurationData camera_obscuration    = 42 [
    (CFO).desc = "Obscurations between reflection at the secondary mirror and  "
      "reception at the camera surface." ];

  calin.ix.simulation.vs_optics.SphericalWindowParameters window = 50 [
    (CFO).desc = "Parameters of camera protection window." ];
};
