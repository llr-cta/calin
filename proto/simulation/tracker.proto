/*

   calin/proto/simulations/tracker.proto -- Stephen Fegan -- 2016-10-12

   Protobufs for tracker configuration

   Copyright 2016, Stephen Fegan <sfegan@llr.in2p3.fr>
   LLR, CNRS, Ecole Polytechnique, Institut Polytechnique de Paris

   This file is part of "calin"

   "calin" is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License version 2 or
   later, as published by the Free Software Foundation.

   "calin" is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

*/

syntax = "proto3";

import "calin.proto";
//import "common_types.proto";

package calin.ix.simulation.tracker;

message AirCherenkovParameterCalculatorTrackVisitorConfig
{
  bool enable_forced_cherenkov_angle_mode                  = 1
    [(CFO).desc = "Force the Cherenkov angle for all particles to have same "
       "prescribed value. Useful for testing certain models where angle is a "
       "parameter (e.g. muons)." ];
  double forced_cherenkov_angle                            = 2
    [(CFO).desc = "Cherenkov angle for all particles in forced mode.",
     (CFO).units = "deg" ];
};

message QuadratureIACTArrayIntegrationConfig
{
  double ray_spacing_linear                                = 1
    [(CFO).desc = "Maximum spacing between test ray impact points on telescope.",
     (CFO).units = "cm" ];
  double ray_spacing_angular                               = 2
    [(CFO).desc = "Maximum angular spacing between test rays.",
     (CFO).units = "deg" ];
};

message ShowerMovieProducerTrackVisitorConfig
{
  double frame_advance_time                                = 1
    [(CFO).desc = "Time between consecutive movie frames.",
     (CFO).units = "ns" ];

  double frame_exposure_time                               = 2
    [(CFO).desc = "Time over which the exposure for each frame is open. Can be "
      "longer, equal, or smaller than frame_advance_time. Zero means it should "
      "be the same as frame_advance_time.",
     (CFO).units = "ns" ];

  double max_time                                          = 3
    [(CFO).desc = "Maximum movie frame time.",
     (CFO).units = "ns" ];

  bool disable_cherenkov_light                             = 10
    [(CFO).desc = "Disable the generation of Cherenkov light tracks in "
      "the movie." ];

  AirCherenkovParameterCalculatorTrackVisitorConfig cherenkov_params = 11
    [(CFO).desc = "Configuration of the air Cherenkov parameter generator." ];

  double cherenkov_epsilon0                                = 12
    [(CFO).desc = "Lowest energy Cherenkov photon to generate.",
     (CFO).units = "eV" ];

  double cherenkov_bandwidth                               = 13
    [(CFO).desc = "Total bandwidth energy of Cherenkov photon to generate.",
     (CFO).units = "eV" ];

  double cherenkov_yield_factor                            = 14
    [(CFO).desc = "Scaling of Cherenkov photon yield to limit number of "
      "photons." ];
}
