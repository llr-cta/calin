//-*-mode:protobuf; mode:font-lock;-*-

/*

   calin/proto/simulations/pmt_ses_models.proto -- Stephen Fegan -- 2020-08-25

   Protobufs for defining PMT models

   Copyright 2020, Stephen Fegan <sfegan@llr.in2p3.fr>
   Laboratoire Leprince-Ringuet, CNRS/IN2P3, Ecole Polytechnique, Institut Polytechnique de Paris

   This file is part of "calin"

   "calin" is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License version 2 or
   later, as published by the Free Software Foundation.

   "calin" is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

*/

syntax = "proto3";

import "calin.proto";

package calin.ix.calib.pmt_ses_models;

message LombardMartinPrescottPMTModelConfig {
  uint32 num_stage                                         = 1 [
    (CFO).desc = "Number of gain stages (dynodes)." ];
  double total_gain                                        = 2 [
    (CFO).desc = "Total gain of the PMT, including zero-charge events." ];
  double stage_0_hi_gain                                   = 3 [
    (CFO).desc = "Mean gain of first stage for electons in high-gain "
      "population." ];
  double stage_0_hi_gain_rms_frac                          = 4 [
    (CFO).desc = "Additional non-Poisson RMS for electons in high-gain "
      "population of first stage as fraction of mean." ];
  double stage_0_lo_prob                                   = 5 [
    (CFO).desc = "Probability of electron being amplified in low-gain "
      "population in stage 0." ];
  double stage_0_lo_gain                                   = 6 [
    (CFO).desc = "Mean gain of first stage for electons in low-gain "
      "population." ];
  double stage_0_lo_gain_rms_frac                          = 7 [
    (CFO).desc = "Additional non-Poisson RMS for electons in low-gain "
      "population of first stage as fraction of mean." ];
  double stage_n_gain_rms_frac                             = 8 [
    (CFO).desc = "Additional non-Poisson RMS of latter stages (n>0) as "
      "fraction of mean." ];
  repeated double stage_0_lo_pmf                           = 9 [
    (CFO).desc = "Externally supplied stage 0 (low-charge) PMF. This should "
      "be normalized to unity, with each element 'i' specifying the probability "
      "of seeing 'i' electrins from the low-charge compoent of stage 0."
      "If it is not supplied then the stage 0 PMF is assumed to be a Polya distribution "
      "with parameters given by \"stage_0_lo_gain\" and \"stage_0_lo_gain_rms_frac\". "
      "This option can specify the full stage 0 PMF if \"stage_0_lo_prob=1.0\"."];
  bool suppress_zero                                       = 10 [
    (CFO).desc = "Suppress events with zero charge." ];
};
